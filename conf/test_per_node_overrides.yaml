# ══════════════════════════════════════════════════════════════════════════════
# MNIST FedAvg Centralized Experiment with TorchDist Communication
#
# Complete configuration for MNIST experiments with FedAvg algorithm.
# Uses centralized topology with 2 clients and TorchDist communication.
# ══════════════════════════════════════════════════════════════════════════════

defaults:
  - base # Base framework configuration
  - override topology: centralized_torchdist # Centralized FL topology with TorchDist
  - override algorithm: fedavg # FedAvg algorithm
  - override model: simple_cnn # Simple CNN for image classification
  - override datamodule: mnist # MNIST dataset
  - _self_ # Override with local settings

# ─────────────────────────────────────────
# Experiment Parameters

global_rounds: 2

# ─────────────────────────────────────────
# Component Overrides

topology:
  num_clients: 2
  node_overrides: # Override settings per-rank
    # Rank 0 (server) - disable training by setting train dataloader to null
    0:
      id: Server
      datamodule:
        train: null
    # 1:
    #   algorithm:
    #     local_lr: 0.005  # Different learning rate for client 1
    # 2:
    #   device: "cpu"     # Force client 2 to use CPU

algorithm:
  local_lr: 0.01
  max_epochs_per_round: 2

model:
  backbone:
    in_channels: 1 # MNIST grayscale images
  head:
    num_classes: 10 # 10 digit classes

datamodule:
  train:
    batch_size: 16
  eval:
    batch_size: 16
